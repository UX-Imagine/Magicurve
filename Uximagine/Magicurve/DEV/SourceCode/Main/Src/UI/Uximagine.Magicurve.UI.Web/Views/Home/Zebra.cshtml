
@section Scripts{
    <script src="~/Scripts/app/views/home/magicurve.app.service.home.js"></script>
    <script src="~/Scripts/fx/zebra/zebra.min.js"></script>
    <script src="~/Scripts/app/views/home/canvas.js"></script>
    <script src="~/Scripts/app/views/home/zebra.draw.js"></script>
    <script src="~/Scripts/app/views/home/home.zebra.js"></script>
    <script src="~/Scripts/app/views/home/magicurve.app.controller.home.js"></script>
    <script>



        var pos;
        function allowDrop(ev) {
            ev.preventDefault();

        }

        function get_pos(ev) {
            pos = [ev.pageX, ev.pageY];
        }


        function drag(ev) {
            ev.dataTransfer.setData("Text", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var offset = ev.dataTransfer.getData("text/plain").split(',');
            var data = ev.dataTransfer.getData("Text");

            // document.getElementById("desi").getContext("2d").drawImage(document.getElementById(data), ev.pageX - dx, ev.pageY - dy);

            if (data == "button") {
                var but = canvas = document.getElementById("button");
                var dx = pos[0] - but.offsetLeft;
                var dy = pos[1] - but.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragButton(X, Y);
            }
            else if (data == "check") {

                var but = canvas = document.getElementById("check");
                var dx = pos[0] - but.offsetLeft;
                var dy = pos[1] - but.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragCheckBox(X, Y);
            }
            else if (data == "combo") {

                var combo = canvas = document.getElementById("combo");
                var dx = pos[0] - combo.offsetLeft;
                var dy = pos[1] - combo.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragCombo(X, Y);
            }
            else if (data == "datepic") {
                var datepic = canvas = document.getElementById("datepic");
                var dx = pos[0] - datepic.offsetLeft;
                var dy = pos[1] - datepic.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragDatePicker(X, Y);
            }
            else if (data == "image") {

                var img = canvas = document.getElementById("image");
                var dx = pos[0] - img.offsetLeft;
                var dy = pos[1] - img.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragImageContent(X, Y);
            }
            else if (data == "radio") {
                var radi = canvas = document.getElementById("radio");
                var dx = pos[0] - radi.offsetLeft;
                var dy = pos[1] - radi.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragRadioButton(X, Y);
            }
            else if (data == "inputtext") {
                var text = canvas = document.getElementById("inputtext");
                var dx = pos[0] - text.offsetLeft;
                var dy = pos[1] - text.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragInputText(X, Y);
            }
            else if (data == "lable") {
                var lab = canvas = document.getElementById("lable");
                var dx = pos[0] - lab.offsetLeft;
                var dy = pos[1] - lab.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragLable(X, Y);
            }
            else if (data == "menu") {
                var men = canvas = document.getElementById("menu");
                var dx = pos[0] - men.offsetLeft;
                var dy = pos[1] - men.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragMenuBar(X, Y);
            }
            else if (data == "para") {
                var parag = canvas = document.getElementById("para");
                var dx = pos[0] - parag.offsetLeft;
                var dy = pos[1] - parag.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragPara(X, Y);

            }
            else if (data == "rang") {

                var ran = canvas = document.getElementById("rang");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragRange(X, Y);
            }
            else if (data == "hori") {

                var ran = canvas = document.getElementById("hori");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragHorizo(X, Y);
            }
            else if (data == "link") {

                var ran = canvas = document.getElementById("link");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragLink(X, Y);
            }
            else if (data == "iframe") {

                var ran = canvas = document.getElementById("iframe");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragIframe(X, Y);
            }
            else if (data == "password") {

                var ran = canvas = document.getElementById("password");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragInputText(X, Y);
            }
            else if (data == "textArea") {

                var ran = canvas = document.getElementById("textArea");
                var dx = pos[0] - ran.offsetLeft;
                var dy = pos[1] - ran.offsetTop;
                var X = ev.pageX - dx;
                var Y = ev.pageY - dy;
                dragTextArea(X, Y);
            }

        }

        function dragIframe(ix, iy) {
            zebra.ready(function () {
                var iframePic = zebra.ui.loadImage("/Magicurve/Content/Images/Icon/iframe.png");
                var imageIfreme = new zebra.ui.ImagePan(iframePic);
                imageIfreme.setBounds(ix, iy, 150, 150);

                var shperIframe = new zebra.ui.designer.ShaperPan(imageIfreme);
                window.root.add(shperIframe);
            });
        }
        function dragTextArea(textAreaX, textAreaY) {
            var textArea = new zebra.ui.TextArea();
            textArea.setBounds(textAreaX, textAreaY, 100, 50);
            var shpertextArea = new zebra.ui.designer.ShaperPan(textArea);
            window.root.add(shpertextArea);
        }
        function dragLink(lx, ly) {
            zebra.ready(function () {

                var hyperlink = new zebra.ui.Link("Hyper Link");
                hyperlink.setBounds(lx, ly, 60, 10);
                hyperlink.setColor("#2E64FE");
                var linkShaperPan = new zebra.ui.designer.ShaperPan(hyperlink);
                window.root.add(linkShaperPan);

            });
        }
        function dragHorizo(lx, ly) {
            zebra.ready(function () {

                var horizontal = new zebra.ui.Line();
                horizontal.setBounds(lx, ly, 150, 3);


                var horiShaperPan = new zebra.ui.designer.ShaperPan(horizontal);
                window.root.add(horiShaperPan);

            });
        }
        function dragButton(bx, by) {


            zebra.ready(function () {

                var button = new zebra.ui.Button("Button");
                button.setBounds(bx, by, 80, 30);
                // button.setBackground("red");
                var buttonShaperPan = new zebra.ui.designer.ShaperPan(button);
                window.root.add(buttonShaperPan);

            });
        }
        function dragCheckBox(cx, cy) {
            zebra.ready(function () {


                var checkBox = new zebra.ui.Checkbox("Check box");
                checkBox.setBounds(cx, cy, 100, 30);
                var checkBoxShaperPan = new zebra.ui.designer.ShaperPan(checkBox);
                window.root.add(checkBoxShaperPan);

            });
        }
        function dragCombo(bx, by) {
            zebra.ready(function () {
                var combo = new zebra.ui.Combo(new zebra.ui.List([
                  "Item 1",
                  "Item 2",
                  "Item 3"
                ]));

                combo.setBounds(bx, by, 120, 30);
                var shpercombo = new zebra.ui.designer.ShaperPan(combo);

                window.root.add(shpercombo);

            });
        }
        function dragDatePicker(bx, by) {
            zebra.ready(function () {
                var datePic = zebra.ui.loadImage("/Magicurve/Content/Images/Icon/picker.png");
                var imageDatePic = new zebra.ui.ImagePan(datePic);
                imageDatePic.setBounds(bx, by, 140, 40);

                var shperDatePic = new zebra.ui.designer.ShaperPan(imageDatePic);
                window.root.add(shperDatePic);
            });
        }
        function dragImageContent(bx, by) {
            zebra.ready(function () {

                var image = zebra.ui.loadImage("/Magicurve/Content/Images/Icon/image.png");
                var imageImage = new zebra.ui.ImagePan(image);
                imageImage.setBounds(bx, by, 200, 100);

                var shperimage = new zebra.ui.designer.ShaperPan(imageImage);
                window.root.add(shperimage);

            });
        }
        function dragRadioButton(bx, by) {
            zebra.ready(function () {

                var radioButton = new zebra.ui.Radiobox("Radio Button");
                radioButton.setBounds(bx, by, 120, 30);

                var shperRadioBox = new zebra.ui.designer.ShaperPan(radioButton);
                window.root.add(shperRadioBox);

            });
        }
        function dragInputText(bx, by) {
            zebra.ready(function () {


                var textBox = new zebra.ui.TextField("Type Here");
                textBox.setBounds(bx, by, 120, 30);
                var textBoxShaperPan = new zebra.ui.designer.ShaperPan(textBox);
                window.root.add(textBoxShaperPan);

            });
        }
        function dragLable(bx, by) {
            zebra.ready(function () {


                var lable = new zebra.ui.Label("Lable");
                lable.setBounds(bx, by, 120, 30);
                var lableShaperPan = new zebra.ui.designer.ShaperPan(lable);
                window.root.add(lableShaperPan);

            });
        }
        function dragMenuBar(bx, by) {
            zebra.ready(function () {
                var menu = new zebra.ui.Menubar({
                    "HOME": {
                        "Subitem 1.1": null,
                        "Subitem 1.2": null,
                        "Subitem 1.3": null
                    },
                    "CONTENT": {
                        "Subitem 2.1": null,
                        "Subitem 2.2": null,
                        "Subitem 2.3": null
                    },
                    "CONTCT": null
                });

                menu.setBounds(bx, by, 600, 50);
                var shpermenu = new zebra.ui.designer.ShaperPan(menu);
                window.root.add(shpermenu);

            });
        }
        function dragRange(bx, by) {
            zebra.ready(function () {

                var rangePic = zebra.ui.loadImage("/Magicurve/Content/Images/Icon/range.png");
                var imageRangePic = new zebra.ui.ImagePan(rangePic);
                imageRangePic.setBounds(bx, by, 140, 30);
                var shperRange = new zebra.ui.designer.ShaperPan(imageRangePic);
                window.root.add(shperRange);
            });
        }
        function dragPara(bx, by) {
            zebra.ready(function () {

                var paraPic = zebra.ui.loadImage("/Magicurve/Content/Images/Icon/paragrap.png");
                var imageParaPic = new zebra.ui.ImagePan(paraPic);
                imageParaPic.setBounds(bx, by, 100, 50);
                var shperPara = new zebra.ui.designer.ShaperPan(imageParaPic);
                window.root.add(shperPara);
            });
        }

    </script>
}

<div data-ng-controller="homeController">

    <canvas id="designer" ondrop="drop(event)" ondragover="allowDrop(event)" draggable="true">
        This Browser does not support canvas element.
    </canvas>

</div>